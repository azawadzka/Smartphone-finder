#: import CheckBox kivy.uix.checkbox
#: import FadeTransition kivy.uix.screenmanager.FadeTransition

MyScreenManager:
    transition: FadeTransition()
    ParametersScreen:
    ResultsScreen:

<ParamCheckBox@CheckBox>:
    size_hint_x: .1

<ParamLabel@Label>:
    font_size: 16
    color: 1, 1, 1, 1
    size_hint_x: .3

<ParamInnerBox@BoxLayout>:
    orientation: "horizontal"
    size_hint_x: .6
    spacing: 5

<ParamBox@ClickableBox>:
    orientation: "horizontal"
    spacing: 5

<GroupBox@ClickableBox>:
    orientation: "horizontal"

<ParamSpinner@Spinner>:
    text_autoupdate: True
    values: 'More than', 'Less than', 'Equally'

<ParamSlider@Slider>:
    orientation: 'horizontal'

<UnitLabel@Label>:
    size_hint_x: .3

<ParametersScreen>:
    name: "params"

    BoxLayout:
        orientation: "vertical"
        spacing: 10
        padding: 10
        canvas:
            Color:
                rgb: .3, .3, .3, 1
            Rectangle:
                pos: self.pos
                size: self.size

        Label:
            text: "Select your criteria"
            font_size: 24
            size_hint_y: .15

        GridLayout:
            cols: 1
            rows: 11
            size_hint_y: .75

            ParamBox:
                ParamCheckBox:
                    id: priceCheckbox
                ParamLabel:
                    text: "Price"
                ParamInnerBox:
                    ParamSpinner:
                        id: priceOperator
                    ParamSlider:
                        id: priceSlider
                        min: root.ranges["min"]["price"]
                        max: root.ranges["max"]["price"]
                        step: 1
                        on_value: labelPriceValue.text = "{:.0f} EUR".format(self.value)
                    UnitLabel:
                        id: labelPriceValue
                        text: "{:.0f} EUR".format(priceSlider.value)
            ParamBox:
                ParamCheckBox:
                    id: brandCheckbox
                ParamLabel:
                    text: "Brand"
                ParamInnerBox:


            ParamBox:
                ParamCheckBox:
                    id: osCheckbox
                ParamLabel:
                    text: "Operating system"
                ParamInnerBox:

            ParamBox:
                ParamCheckBox:
                    id: memoryCheckbox
                ParamLabel:
                    text: "Built-in memory"
                ParamInnerBox:
                    ParamSpinner:
                        id: memoryOperator
                    ParamSlider:
                        id: memorySlider
                        min: root.ranges["min"]["memory"]
                        max: root.ranges["max"]["memory"]
                        step: 1
                        on_value: labelMemoryValue.text = "{:.0f} GB".format(self.value)
                    UnitLabel:
                        id: labelMemoryValue
                        text: "{:.0f} GB".format(memorySlider.value)
            ParamBox:
                ParamCheckBox:
                    id: ramCheckbox
                ParamLabel:
                    text: "RAM Memory"
                ParamInnerBox:
                    ParamSpinner:
                        id: ramOperator
                    ParamSlider:
                        id: ramSlider
                        min: root.ranges["min"]["ram"]
                        max: root.ranges["max"]["ram"]
                        step: 1
                        on_value: labelRAMValue.text = "{:.0f} GB".format(self.value)
                    UnitLabel:
                        id: labelRAMValue
                        text: "{:.0f} GB".format(ramSlider.value)
            ParamBox:
                ParamCheckBox:
                    id: cpuCheckbox
                ParamLabel:
                    text: "CPU"
                ParamInnerBox:
                    ParamSpinner:
                        id: cpuOperator
                    ParamSlider:
                        id: cpuSlider
                        min: root.ranges["min"]["cpu"]
                        max: root.ranges["max"]["cpu"]
                        step: .1
                        on_value: labelCPUValue.text = "{:.2f} ".format(self.value)
                    UnitLabel:
                        id: labelCPUValue
                        text: "0"
                        size_hint_x: .1
                    Spinner:
                        text: 'GHz'
                        values: 'GHz', 'nm'
                        size_hint_x: .2
                        on_value:
            ParamBox:
                ParamCheckBox:
                    id: cameraCheckbox
                ParamLabel:
                    text: "Camera"
                ParamInnerBox:
                    ParamSpinner:
                        id: cameraOperator
                    ParamSlider:
                        id: cameraSlider
                        min: root.ranges["min"]["camera"]
                        max: root.ranges["max"]["camera"]
                        step: .1
                        on_value: labelCameraValue.text = "{:.1f} mpix".format(self.value)
                    UnitLabel:
                        id: labelCameraValue
                        text: "{:.1f} mpix".format(cameraSlider.value)
            ParamBox:
                ParamCheckBox:
                    id: weightCheckbox
                ParamLabel:
                    text: "Weight"
                ParamInnerBox:
                    ParamSpinner:
                        id: weightOperator
                    ParamSlider:
                        id: weightSlider
                        min: root.ranges["min"]["weight"]
                        max: root.ranges["max"]["weight"]
                        step: 1
                        on_value: labelWeightValue.text = "{:.0f} g".format(self.value)
                    UnitLabel:
                        id: labelWeightValue
                        text: "{:.0f} g".format(weightSlider.value)
            ParamBox:
                ParamCheckBox:
                    id: batteryCheckbox
                ParamLabel:
                    text: "Battery"
                ParamInnerBox:
                    ParamSpinner:
                        id: batteryOperator
                    ParamSlider:
                        id: batterySlider
                        min: root.ranges["min"]["battery"]
                        max: root.ranges["max"]["battery"]
                        step: 1
                        on_value: labelBatteryValue.text = "{:.0f} mAh".format(self.value)
                    UnitLabel:
                        id: labelBatteryValue
                        text: "{:.0f} mAh".format(batterySlider.value)
            ParamBox:
                ParamCheckBox:
                    id: diagonalCheckbox
                ParamLabel:
                    text: "Screen Diagonal"
                ParamInnerBox:
                    ParamSpinner:
                        id: diagonalOperator
                    ParamSlider:
                        id: diagonalSlider
                        min: root.ranges["min"]["diagonal"]
                        max: root.ranges["max"]["diagonal"]
                        step: .1
                        on_value: labelDiagonalValue.text = "{:.1f} cm".format(self.value)
                    UnitLabel:
                        id: labelDiagonalValue
                        text: "{:.1f} cm".format(diagonalSlider.value)
            BoxLayout:
                orientation: "horizontal"
                GroupBox:
                    CheckBox:
                        id: sdCheckbox
                    Label:
                        text: "SD Slot"
                GroupBox:
                    CheckBox:
                        id: bluetoothCheckbox
                    Label:
                        text: "Bluetooth"
                GroupBox:
                    CheckBox:
                        id: gpsCheckbox
                    Label:
                        text: "GPS"
                GroupBox:
                    CheckBox:
                        id: wifiCheckbox
                    Label:
                        text: "Wi-Fi"

        BoxLayout:
            size_hint_y: .1
            Button:
                size_hint_x: .2
                text: "Reset"
            Button:
                text: "Search"
                on_release:
                    root.process_query()
                    root.manager.get_screen("result").generate_result()


<ResultsScreen>:
    name: "result"
    BoxLayout:
        orientation: "vertical"
        canvas:
            Color:
                rgb: .3, .3, .3, 1
            Rectangle:
                pos: self.pos
                size: self.size
        Button:
            text: "Return"
            size_hint_y: .1
            size_hint_x: .1
            on_release: root.switch_to_params()
        ScrollView:
            do_scroll_x: False
            do_scroll_y: True
            BoxLayout:
                id: space_for_result
                orientation: "vertical"
                size_hint_y: None
                height: self.minimum_height
                spacing: 10


